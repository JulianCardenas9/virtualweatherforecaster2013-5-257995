/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.util.Calendar;
import Algorithms.WeatherForecaster;
import Algorithms.SimpleMovingAverage;
import Algorithms.DoubleMovingAverage;
import Algorithms.DoubleExponentialSmoothing;
import Algorithms.DoubleMovingAverage;
import java.util.ArrayList;

/**
 *
 * @author user
 */
public class InterfazInicial extends javax.swing.JDialog {

    private ArrayList<Double> lstDays = new ArrayList<Double>();
    private ArrayList<Double> lstForecaster = new ArrayList<Double>();
    
    /**
     * Creates new form InterfazInicial
     */
   public InterfazInicial(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setLocation(500, 200);
        initComponents();
        renderOutput();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelWeatherReport = new javax.swing.JLabel();
        labelValuestoForecast = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        txtForecast = new javax.swing.JTextField();
        buttonAddReport = new javax.swing.JButton();
        buttonDeleteLast = new javax.swing.JButton();
        buttonDeleteAll = new javax.swing.JButton();
        btnForecast = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLast = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelWeatherReport.setText("Weather Report");

        labelValuestoForecast.setText("Values to Forecast");

        txtValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueActionPerformed(evt);
            }
        });

        txtForecast.setText("0");
        txtForecast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtForecastActionPerformed(evt);
            }
        });

        buttonAddReport.setText("Add");
        buttonAddReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddReportActionPerformed(evt);
            }
        });

        buttonDeleteLast.setText("Delete Last");

        buttonDeleteAll.setText("Delete All");

        btnForecast.setText("Forecast");
        btnForecast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForecastActionPerformed(evt);
            }
        });

        txtLast.setEditable(false);
        txtLast.setColumns(20);
        txtLast.setRows(5);
        txtLast.setText("Current Data:");
        jScrollPane1.setViewportView(txtLast);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelWeatherReport)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelValuestoForecast)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtForecast, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                .addComponent(buttonAddReport)
                                .addGap(34, 34, 34)
                                .addComponent(buttonDeleteLast)
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnForecast)
                                    .addComponent(buttonDeleteAll)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelWeatherReport)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelValuestoForecast)
                    .addComponent(txtForecast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddReport)
                    .addComponent(buttonDeleteLast)
                    .addComponent(buttonDeleteAll))
                .addGap(18, 18, 18)
                .addComponent(btnForecast)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueActionPerformed

    private void txtForecastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtForecastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtForecastActionPerformed

    private void buttonAddReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddReportActionPerformed
        
        double value = Double.parseDouble(txtValue.getText());
        lstDays.add(value);
        txtValue.setText("");
        lstForecaster = new ArrayList<Double>();
        renderOutput();
    }//GEN-LAST:event_buttonAddReportActionPerformed

    private void btnForecastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForecastActionPerformed

        int days = Integer.parseInt(txtForecast.getText());
        Algorithms.WeatherForecaster weatherForecaster = new Algorithms.WeatherForecaster();
        lstForecaster = weatherForecaster.Get(lstDays, days);
        
        renderOutput();
    }//GEN-LAST:event_btnForecastActionPerformed

    private void renderOutput(){
        Calendar fecha = Calendar.getInstance();
        String msg = "Current Date: "+fecha.get(Calendar.DATE)
                                          +"/"+(fecha.get(Calendar.MONTH)+1)
                                          +"/"+fecha.get(Calendar.YEAR);
        
        //muestra las valores ingresados
        if(lstDays.size()>0)
        {
            msg += "\n\n------------------------------------"+
                   "\n\nDias Anteriores \n";
            
            for (int i = 0; i < lstDays.size(); i++) {
                msg += lstDays.get(i) + "\n";    
            }
        }
        
        //muestra el pronostico
        if(lstForecaster.size()>0)
        {
            msg += "\n\n------------------------------------"+
                   "\n\nPronostico \n";
            
            for (int i = 0; i < lstForecaster.size(); i++) {
                msg += lstForecaster.get(i) + "\n";    
            }
        }
        
        txtLast.setText(msg);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InterfazInicial dialog = new InterfazInicial(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnForecast;
    private javax.swing.JButton buttonAddReport;
    private javax.swing.JButton buttonDeleteAll;
    private javax.swing.JButton buttonDeleteLast;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelValuestoForecast;
    private javax.swing.JLabel labelWeatherReport;
    private javax.swing.JTextField txtForecast;
    private javax.swing.JTextArea txtLast;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
